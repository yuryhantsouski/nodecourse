---
swagger: "2.0"
info:
  description: "This is a sample server.\n"
  version: "1.0.0"
  title: "Nodecourse"
host: "virtserver.swaggerhub.com"
basePath: "/nodecourse/nodecourse/1.0.0"
tags:
- name: "product"
  description: "Your product"
- name: "review"
  description: "Reviews about product"
- name: "user"
  description: "Operations about user"
schemes:
- "https"
- "http"
paths:
  /product:
    post:
      tags:
      - "product"
      summary: "Add a new product"
      operationId: "addProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Product"
  /product/{productID}:
    get:
      tags:
      - "product"
      summary: "Find product by ID"
      description: "Returns a single product"
      operationId: "getProductById"
      produces:
      - "application/json"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of product to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Peoductt not found"
      x-swagger-router-controller: "Product"
    post:
      tags:
      - "product"
      summary: "Updates a product in the store with form data"
      operationId: "updateProductWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of product that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the product"
        required: false
        type: "string"
      - name: "brand"
        in: "formData"
        description: "Updated brand of the pet"
        required: false
        type: "string"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Product"
    delete:
      tags:
      - "product"
      summary: "Deletes a product"
      operationId: "deleteProduct"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "productID"
        in: "path"
        description: "Product id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      x-swagger-router-controller: "Product"
  /product/{productID}/reviews:
    post:
      tags:
      - "product"
      summary: "uploads a review"
      operationId: "uploadReview"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of product to update"
        required: true
        type: "integer"
        format: "int64"
      - name: "review"
        in: "formData"
        description: "review to upload"
        required: false
        type: "file"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "Product"
    get:
      tags:
      - "product"
      summary: "get a reviews"
      operationId: "getReviews"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of product to update"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "Product"
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "User"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      age:
        type: "integer"
    example:
      name: "name"
      id: 0
      age: 6
  Product:
    type: "object"
    required:
    - "brand"
    - "name"
    - "price"
    properties:
      id:
        type: "string"
      name:
        type: "string"
        example: "doggie"
      brand:
        type: "string"
        example: "nike"
      price:
        type: "integer"
    example:
      price: 0
      name: "doggie"
      id: "id"
      brand: "nike"
  Review:
    type: "object"
    required:
      - "text"
      - "productId"
    properties:
      id:
        type: "integer"
        format: "int64"
      text:
        type: "string"
        example: "doggie"
      productId:
        type: "integer"
        format: "int64"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
    example:
      code: 0
      type: "type"
      message: "message"
